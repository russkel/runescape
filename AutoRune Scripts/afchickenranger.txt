; Set up some events
OnStatsChanged(@StatsChange,%Stat)
OnServerMessage(@ServMes)
OnItemAppeared(@NewItem,%ItemID,%X,%Y)

FightMode(3)
@MainLoop:
GoToIfCoordsIn(@InHouse,119,607,112,612)
GoToIfCoordsIn(@BackToPen,112,606,114,612)
GoToIfNPCNear(@Attack,3)
Wait(5)
GoTo(@MainLoop)


@Attack:
SetVarsNearestNPC(%x,%y,%ID,3)
ActionVarVar(%x,%y)
MagicNPCVar(%ID)
Wait(10)
Goto(@MainLoop)

@DontAttack:
Wait(5,6)

; count how many loops we are idling
AddVarNum(%IdleC,1)
; if more than 20 loops - attack next enemy
GoToIfVarAboveNum(@FightNext,%IdleC,4)
; if more than 4 loops - burry all bones we have
GoToIfVarAboveNum(@IHaveBones,%IdleC,2)
GoTo(@MainLoop)


@FightNext:
; tell AR that we are not fighting
SetVarNum(%FightOver,1)
; reset idle counter
SetVarNum(%IdleC,0)
GoTo(@MainLoop)


@IHaveBones:
; don't dig bones if we are fighting
GoToIfVarEqualNum(@NotWorthToDig,%FightOver,0)
; dig only if I do have bones
GoToIfInInventory(@IReallyHaveBones,20)
GoTo(@NotWorthToDig)
@IReallyHaveBones:
GoSub(@DigBones)
@NotWorthToDig:
GoTo(@MainLoop)


;--- OnStatChaged
@StatsChange:
@CanMove:
;If my HitPoints skill changed, it means
;fight is over
GoToIfVarEqualNum(@SetCanMove,%Stat,3)
ERet()
@SetCanMove:
SetVarNum(%FightOver,1)
SetVarNum(%IdleC,0)
ERet()


;--- OnServerMessage
@ServMes:
DebugLastServerMessage()
;-- If someone stole your enemy
GoToIfLastServerMessageIs(@ResetGo,"I can't get close enough")
;-- or your victim runs away
GoToIfLastServerMessageIs(@ResetGo,"Your opponent is retreating")
;-- out of fatguie
---------
GoToIfLastServerMessageIs(@Sleep,"@gre@You are too tired to gain experience, get some rest!")
---------
ERet()

@Sleep:
UseItem(0)
SetVarNum(%SleepTime,0)
SetVarNum(%MaxSleepTime,25)
@Sleeping:
Wait(10)
AddVarNum(%SleepTime,1)
GoToIfVarAbove(@Sleep,%SleepTime,%MaxSleepTime)
GoToIfLastServerMessageIsNot(@Sleeping,"You wake up - feeling refreshed")
@Slept:
ERet()


;-- then let AR know that fight is over
@ResetGo:
SetVarNum(%FightOver,1)
ERet()


;--- New item appeared
@NewItem:
;-- If we're not fighting or burying bones
; then take the item
GoToIfVarEqualNum(@TakeItems,%FightOver,1)
ERet()
@TakeItems:
SetVarMyX(%MX)
SetVarMyY(%MY)
;Only take the item if it's right under my feet
-GoToIfVarNotEqual(@DontGrabAnything,%X,%MX)
-GoToIfVarNotEqual(@DontGrabAnything,%Y,%MY)
;-- Only take certain items
GoToIfVarNotEqualNum(@DontGrabBones,%ItemID,20)
-GoTo(@GrabBones)
@DontGrabBones:
GoToIfVarNotEqualNum(@DontGrabArrows,%ItemID,11)
GoTo(@GrabArrows)
@DontGrabArrows:
GoToIfVarNotEqualNum(@DontGrabCoins,%ItemID,381)
GoTo(@GrabCoins)
@DontGrabCoins:
@DontGrabAnything:
ERet()



;---Pick up bones
@GrabBones:
ActionVarVar(%X,%Y)
TakeItemVarVar(%X,%Y,20)
Wait(10)
GoTo(@DontGrabBones)

;---Pick up coins
@GrabCoins:
ActionVarVar(%X,%Y)
TakeItemVarVar(%X,%Y,381)
Wait(10)
GoTo(@DontGrabCoins)

;---Pick up arrows
@GrabArrows:
ActionVarVar(%X,%Y)
TakeItemVarVar(%X,%Y,11)
Wait(10)
GoTo(@DontGrabArrows)


;--- Dig all bones
@DigBones:
; Don't dig if we are in fight
GoToIfVarEqualNum(@DontDig,%FightOver,0)
@DigBonesLoop:
UseItemByID(20)
Wait(20)
; if we still have bones, keep digging
GoToIfInInventory(@DigBonesLoop,20)
@DontDig:
Ret()

;--- GET UNSTUCK
@InHouse:
MoveTo(119,610)
MoveTo(118,610)
MoveTo(118,605)
GoTo(@MainLoop)

@BackToPen:
MoveTo(114,608)
Action(114,608)
AtObject(114,608)
Wait(30)
MoveTo(117,608)
MoveTo(117,606,3,-3)
GoTo(@MainLoop)

